{"version":3,"sources":["components/Table.js","config/queries.js","App.js","index.js"],"names":["Table","props","data","headers","length","Object","keys","className","map","header","row","indexOf","queries","description","inputType","App","useState","selectedQueryIndex","setSelectedQueryIndex","selectedInputIndex","setSelectedInputIndex","input","setInput","Date","startDate","setStartDate","finalDate","setFinalDate","resData","setResData","err","setErr","loading","setLoading","strings","inputNames","twoDates","null","id","formatDate","date","getFullYear","getMonth","getDate","makeQuery","a","route","console","log","axios","get","response","status","src","alt","query","index","onClick","newIndex","style","fontSize","type","inputIndex","selected","onChange","display","alignItems","flexDirection","e","value","isNaN","parseInt","changeInput","target","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b144a43e.chunk.js","sourcesContent":["// Styles\r\nimport \"../App.css\";\r\n\r\nexport const Table = (props) => {\r\n  const { data } = props;\r\n  const headers =\r\n    data != null && data.length >= 1 ? Object.keys(data[0]) : null;\r\n\r\n  return headers ? (\r\n    <div className=\"table\">\r\n      <div className=\"tableRow\">\r\n        {headers.map((header) => (\r\n          <div className=\"cell cellHeader\">\r\n            <p className=\"cellText cellTextHeader\">{header}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {data.map((row) => (\r\n        <div className=\"tableRow\">\r\n          {headers.map((header) => (\r\n            <div className={`cell cell${data.indexOf(row) % 2}`}>\r\n              <p className=\"cellText\">{row[header]}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ) : null;\r\n};\r\n","const queries = [\r\n  // 1\r\n  {\r\n    description: \"Factura del servicio de estadía en Hotel.\",\r\n    inputType: [\"id\"],\r\n  },\r\n  // 2\r\n  {\r\n    description:\r\n      \"Reporte de habitaciones disponibles clasificado por tipo de habitación.\",\r\n    inputType: [null],\r\n  },\r\n  // 3\r\n  {\r\n    description:\r\n      \"Reporte de habitaciones ocupadas y número de huéspedes por fecha determinada.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 4\r\n  {\r\n    description:\r\n      \"Reporte de ocupación del hotel clasificado por temporada en un rango de fechas dado.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 5\r\n  {\r\n    description:\r\n      \"Reporte del tipo de habitación con su descripción y números de habitaciones disponible del  hotel.\",\r\n    inputType: [null, \"id\"],\r\n  },\r\n  // 6\r\n  {\r\n    description:\r\n      \"Reporte de los registros con mayor tiempo de ocupación por un rango de fechas determinado.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 7\r\n  {\r\n    description:\r\n      \"Reporte de los empleados totales que laboran en el hotel, clasificado por departamentos.\",\r\n    inputType: [null],\r\n  },\r\n  // 8\r\n  {\r\n    description:\r\n      \"Reporte de los empleados de mostrador con mayor bono obtenido por el registro de los  huéspedes en base a una fecha determinada.\",\r\n    inputType: [null],\r\n  },\r\n  // 9\r\n  {\r\n    description:\r\n      \"Reporte de las ventas realizadas (Registro de habitación, servicios adquiridos) en un  determinado rango de fechas.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 10\r\n  {\r\n    description:\r\n      \"Reporte de ganancias obtenidas por servicios adquiridos clasificados por tipo de servicio y en  base a un rango de fechas dado.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 11\r\n  {\r\n    description:\r\n      \"Reporte de quejas registradas en base a un rango de fechas dado y clasificado por el  departamento al que fue aplicada la queja.\",\r\n    inputType: [null],\r\n  },\r\n  // 12\r\n  {\r\n    description:\r\n      \"Reporte de número de huéspedes registrados y clasificados por el medio de registro (Internet,  Teléfono, Presencial) y muestre las ganancias obtenidas en base a rango de fechas dado.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 13\r\n  {\r\n    description:\r\n      \"Reporte del departamento con mejor rating de satisfacción, en base a un rango de fechas dado.\",\r\n    inputType: [null],\r\n  },\r\n];\r\nexport default queries;\r\n","// React imports\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// HTTP\nimport axios from \"axios\";\n\n// Components\nimport { Table } from \"./components/Table\";\n\n// Config\nimport queries from \"./config/queries\";\n\nconst App = () => {\n  // Constants\n  const [selectedQueryIndex, setSelectedQueryIndex] = useState(0);\n  const [selectedInputIndex, setSelectedInputIndex] = useState(0);\n  const [input, setInput] = useState(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [finalDate, setFinalDate] = useState(new Date());\n  const [resData, setResData] = useState(null);\n  const [err, setErr] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const strings = {\n    inputNames: {\n      twoDates: \"Fechas\",\n      null: \"Sin entrada\",\n      id: \"ID\",\n    },\n  };\n\n  // Functions\n  const changeInput = (value) => {\n    if (value === \"\") {\n      setInput(0);\n      return;\n    }\n    try {\n      if (isNaN(value)) return;\n      value = parseInt(value);\n      if (value < 0) return;\n      setInput(value);\n    } catch (e) {}\n  };\n\n  const changeQuery = (newIndex) => {\n    setSelectedInputIndex(0);\n    setSelectedQueryIndex(newIndex);\n    setLoading(false);\n    setErr(false);\n    setResData(null);\n  };\n\n  const formatDate = (date = new Date()) => {\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n  };\n\n  const makeQuery = async () => {\n    setErr(false);\n\n    let route = \"\";\n    if (\n      queries[selectedQueryIndex].inputType[selectedInputIndex] === \"twoDates\"\n    )\n      route += `/${formatDate(startDate)}/${formatDate(finalDate)}`;\n    else if (queries[selectedQueryIndex].inputType[selectedInputIndex] === \"id\")\n      route += `/${input}`;\n\n    setLoading(true);\n    console.log(`http://localhost:3000/query${selectedQueryIndex + 1}${route}`);\n    let response;\n    try {\n      response = await axios.get(\n        `http://localhost:3000/query${selectedQueryIndex + 1}${route}`\n      );\n    } catch (e) {\n      setLoading(false);\n      setErr(true);\n      return;\n    }\n    setLoading(false);\n\n    if (response.status !== 200) {\n      setErr(true);\n      return;\n    }\n\n    setResData(response.data);\n  };\n\n  // Render\n  return (\n    <div className=\"app\">\n      {/* Nav bar */}\n      <nav>\n        <img\n          src=\"https://raw.githubusercontent.com/ulisesaviles/db-postgre-app/main/app/public/logo1000.png\"\n          className=\"logo\"\n          alt=\"logo\"\n        />\n        <h3>Consultas</h3>\n        <div className=\"nav-queries-container\">\n          {queries.map((query) => {\n            const index = queries.indexOf(query);\n            return (\n              <div\n                className={`nav-query-Container ${\n                  selectedQueryIndex === index\n                    ? \"nav-query-Container-selected\"\n                    : \"\"\n                }`}\n                onClick={() => changeQuery(index)}\n              >\n                Consulta {index + 1}\n              </div>\n            );\n          })}\n        </div>\n      </nav>\n\n      {/* Content */}\n      <div className=\"content-container\">\n        {/* Description */}\n        <div className=\"description-container\">\n          <h1 style={{ fontSize: 45 }}>Consulta {selectedQueryIndex + 1}</h1>\n          <h3>Descripción</h3>\n          {queries[selectedQueryIndex].description}\n        </div>\n\n        {/* Input section */}\n        <div className=\"content-subContainer border-bottom\">\n          <h1>Input</h1>\n          <div className=\"ipnutsContainer\">\n            {queries[selectedQueryIndex].inputType.map((type) => {\n              const inputIndex =\n                queries[selectedQueryIndex].inputType.indexOf(type);\n              return (\n                <div\n                  className={\n                    selectedInputIndex === inputIndex ? \"inputName\" : \"margin\"\n                  }\n                  onClick={() => setSelectedInputIndex(inputIndex)}\n                >\n                  {strings.inputNames[type]}\n                </div>\n              );\n            })}\n          </div>\n          {queries[selectedQueryIndex].inputType[selectedInputIndex] ===\n          null ? (\n            <p className=\"noInput\">(Esta consulta no requiere input)</p>\n          ) : queries[selectedQueryIndex].inputType[selectedInputIndex] ===\n            \"twoDates\" ? (\n            <div className=\"datesContainer\">\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n              />\n\n              <DatePicker\n                selected={finalDate}\n                onChange={(date) => setFinalDate(date)}\n              />\n            </div>\n          ) : (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n              }}\n            >\n              <input\n                onChange={(e) => changeInput(e.target.value)}\n                value={input}\n              />\n              <p className=\"noInput\" style={{ fontSize: 14 }}>\n                (Recuerda ingresar enteros positivos)\n              </p>\n            </div>\n          )}\n          <div className=\"nav-query-Container-selected btn\" onClick={makeQuery}>\n            Hacer consulta\n          </div>\n        </div>\n\n        {/* Response section */}\n        <div className=\"content-subContainer\">\n          <h1>Output</h1>\n          {loading ? (\n            <p className=\"noInput\" style={{ margin: 20 }}>\n              Cargando...\n            </p>\n          ) : err ? (\n            <p className=\"noInput\" style={{ margin: 20 }}>\n              Error. Revisa tu conexión.\n            </p>\n          ) : resData != null ? (\n            <Table data={resData} />\n          ) : (\n            <p className=\"noInput\" style={{ margin: 20 }}>\n              (Ingresa la información solicitada y preciona \"Hacer consulta\")\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
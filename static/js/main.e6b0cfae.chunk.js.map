{"version":3,"sources":["components/Table.js","config/queries.js","App.js","index.js"],"names":["Table","props","data","headers","Object","keys","className","map","header","row","indexOf","description","inputType","App","useState","selectedQueryIndex","setSelectedQueryIndex","selectedInputIndex","setSelectedInputIndex","input","setInput","Date","startDate","setStartDate","finalDate","setFinalDate","resData","setResData","err","setErr","loading","setLoading","strings","inputNames","twoDates","null","id","formatDate","date","getFullYear","getMonth","getDate","makeQuery","a","route","queries","console","log","axios","get","response","status","src","alt","query","index","onClick","newIndex","style","fontSize","type","inputIndex","display","alignItems","selected","onChange","flexDirection","e","value","isNaN","parseInt","changeInput","target","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6b0cfae.chunk.js","sourcesContent":["// Styles\r\nimport \"../App.css\";\r\n\r\nexport const Table = (props) => {\r\n  const { data } = props;\r\n  const headers = data ? Object.keys(data[0]) : null;\r\n\r\n  return headers ? (\r\n    <div className=\"table\">\r\n      <div className=\"tableRow\">\r\n        {headers.map((header) => (\r\n          <div className=\"cell cellHeader\">\r\n            <p className=\"cellText cellTextHeader\">{header}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {data.map((row) => (\r\n        <div className=\"tableRow\">\r\n          {headers.map((header) => (\r\n            <div className={`cell cell${data.indexOf(row) % 2}`}>\r\n              <p className=\"cellText\">{row[header]}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ) : null;\r\n};\r\n","export default [\r\n  // 1\r\n  {\r\n    description: \"Factura del servicio de estadía en Hotel.\",\r\n    inputType: [\"id\"],\r\n  },\r\n  // 2\r\n  {\r\n    description:\r\n      \"Reporte de habitaciones disponibles clasificado por tipo de habitación.\",\r\n    inputType: [null],\r\n  },\r\n  // 3\r\n  {\r\n    description:\r\n      \"Reporte de habitaciones ocupadas y número de huéspedes por fecha determinada.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 4\r\n  {\r\n    description:\r\n      \"Reporte de ocupación del hotel clasificado por temporada en un rango de fechas dado.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 5\r\n  {\r\n    description:\r\n      \"Reporte del tipo de habitación con su descripción y números de habitaciones disponible del  hotel.\",\r\n    inputType: [null, \"id\"],\r\n  },\r\n  // 6\r\n  {\r\n    description:\r\n      \"Reporte de los registros con mayor tiempo de ocupación por un rango de fechas determinado.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 7\r\n  {\r\n    description:\r\n      \"Reporte de los empleados totales que laboran en el hotel, clasificado por departamentos.\",\r\n    inputType: [null],\r\n  },\r\n  // 8\r\n  {\r\n    description:\r\n      \"Reporte de los empleados de mostrador con mayor bono obtenido por el registro de los  huéspedes en base a una fecha determinada.\",\r\n    inputType: [null],\r\n  },\r\n  // 9\r\n  {\r\n    description:\r\n      \"Reporte de las ventas realizadas (Registro de habitación, servicios adquiridos) en un  determinado rango de fechas.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 10\r\n  {\r\n    description:\r\n      \"Reporte de ganancias obtenidas por servicios adquiridos clasificados por tipo de servicio y en  base a un rango de fechas dado.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 11\r\n  {\r\n    description:\r\n      \"Reporte de quejas registradas en base a un rango de fechas dado y clasificado por el  departamento al que fue aplicada la queja.\",\r\n    inputType: [null],\r\n  },\r\n  // 12\r\n  {\r\n    description:\r\n      \"Reporte de número de huéspedes registrados y clasificados por el medio de registro (Internet,  Teléfono, Presencial) y muestre las ganancias obtenidas en base a rango de fechas dado.\",\r\n    inputType: [\"twoDates\"],\r\n  },\r\n  // 13\r\n  {\r\n    description:\r\n      \"Reporte del departamento con mejor rating de satisfacción, en base a un rango de fechas dado.\",\r\n    inputType: [null],\r\n  },\r\n];\r\n","// React imports\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// HTTP\nimport axios from \"axios\";\n\n// Components\nimport { Table } from \"./components/Table\";\n\n// Config\nimport queries from \"./config/queries\";\n\nconst App = () => {\n  // Constants\n  const dev = true;\n  const [selectedQueryIndex, setSelectedQueryIndex] = useState(0);\n  const [selectedInputIndex, setSelectedInputIndex] = useState(0);\n  const [input, setInput] = useState(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [finalDate, setFinalDate] = useState(new Date());\n  const [resData, setResData] = useState(null);\n  const [err, setErr] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const strings = {\n    inputNames: {\n      twoDates: \"Fechas\",\n      null: \"Sin entrada\",\n      id: \"ID\",\n    },\n  };\n\n  // Functions\n  const changeInput = (value) => {\n    if (value == \"\") {\n      setInput(0);\n      return;\n    }\n    try {\n      if (isNaN(value)) return;\n      value = parseInt(value);\n      if (value < 0) return;\n      setInput(value);\n    } catch (e) {}\n  };\n\n  const changeQuery = (newIndex) => {\n    setSelectedInputIndex(0);\n    setSelectedQueryIndex(newIndex);\n    setLoading(false);\n    setErr(false);\n    setResData(null);\n  };\n\n  const formatDate = (date = new Date()) => {\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n  };\n\n  const makeQuery = async () => {\n    setErr(false);\n\n    let route = \"\";\n    if (queries[selectedQueryIndex].inputType[selectedInputIndex] == \"twoDates\")\n      route += `/${formatDate(startDate)}/${formatDate(finalDate)}`;\n    else if (queries[selectedQueryIndex].inputType[selectedInputIndex] == \"id\")\n      route += `/${input}`;\n\n    setLoading(true);\n    console.log(`http://localhost:3000/query${selectedQueryIndex + 1}${route}`);\n    let response;\n    try {\n      response = await axios.get(\n        `http://localhost:3000/query${selectedQueryIndex + 1}${route}`\n      );\n    } catch (e) {\n      setLoading(false);\n      setErr(true);\n      return;\n    }\n    setLoading(false);\n\n    if (response.status !== 200) {\n      setErr(true);\n      return;\n    }\n\n    setResData(response.data);\n  };\n\n  return (\n    <div className=\"app\">\n      <nav>\n        <img\n          src=\"https://raw.githubusercontent.com/ulisesaviles/db-postgre-app/main/app/public/logo1000.png\"\n          className=\"logo\"\n          alt=\"logo\"\n        />\n        <h3>Consultas</h3>\n        <div className=\"nav-queries-container\">\n          {queries.map((query) => {\n            const index = queries.indexOf(query);\n            return (\n              <div\n                className={`nav-query-Container ${\n                  selectedQueryIndex === index\n                    ? \"nav-query-Container-selected\"\n                    : \"\"\n                }`}\n                onClick={() => changeQuery(index)}\n              >\n                Consulta {index + 1}\n              </div>\n            );\n          })}\n        </div>\n      </nav>\n      <div className=\"content-container\">\n        <div className=\"description-container\">\n          <h1 style={{ fontSize: 45 }}>Consulta {selectedQueryIndex + 1}</h1>\n          <h3>Descripción</h3>\n          {queries[selectedQueryIndex].description}\n        </div>\n        <div className=\"subContainers-container\">\n          <div className=\"content-subContainer border-right\">\n            <h1>Input</h1>\n            <div className=\"ipnutsContainer\">\n              {queries[selectedQueryIndex].inputType.map((type) => {\n                const inputIndex =\n                  queries[selectedQueryIndex].inputType.indexOf(type);\n                return (\n                  <div\n                    className={\n                      selectedInputIndex === inputIndex ? \"inputName\" : \"margin\"\n                    }\n                    onClick={() => setSelectedInputIndex(inputIndex)}\n                  >\n                    {strings.inputNames[type]}\n                  </div>\n                );\n              })}\n            </div>\n            {queries[selectedQueryIndex].inputType[selectedInputIndex] ==\n            null ? (\n              <p className=\"noInput\">(Esta consulta no requiere input)</p>\n            ) : queries[selectedQueryIndex].inputType[selectedInputIndex] ==\n              \"twoDates\" ? (\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <DatePicker\n                  selected={startDate}\n                  onChange={(date) => setStartDate(date)}\n                />\n\n                <DatePicker\n                  selected={finalDate}\n                  onChange={(date) => setFinalDate(date)}\n                />\n              </div>\n            ) : (\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <input\n                  onChange={(e) => changeInput(e.target.value)}\n                  value={input}\n                />\n                <p className=\"noInput\" style={{ fontSize: 14 }}>\n                  (Recuerda ingresar enteros positivos)\n                </p>\n              </div>\n            )}\n            <div\n              className=\"nav-query-Container-selected btn\"\n              onClick={makeQuery}\n            >\n              Hacer consulta\n            </div>\n          </div>\n          <div className=\"content-subContainer\">\n            <h1>Output</h1>\n            {loading ? (\n              <p className=\"noInput\" style={{ margin: 20 }}>\n                Cargando...\n              </p>\n            ) : err ? (\n              <p className=\"noInput\" style={{ margin: 20 }}>\n                Error. Revisa tu conexión.\n              </p>\n            ) : resData != null ? (\n              <Table data={resData} />\n            ) : (\n              <p className=\"noInput\" style={{ margin: 20 }}>\n                (Ingresa la información solicitada y preciona \"Hacer consulta\")\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}